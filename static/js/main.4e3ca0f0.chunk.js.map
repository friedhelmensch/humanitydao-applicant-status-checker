{"version":3,"sources":["utils/getWeb3.js","ContractInfoFetcher.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","provider","web3","wrap","_context","prev","next","Web3","providers","HttpProvider","console","log","stop","this","makeContractInfoFetcher","humanityGovernanceContract","eth","Contract","HumanityGovernanceJSON","abi","networks","address","twitterHumanityApplicantContract","TwitterHumanityApplicantJSON","fetchAllProposals","_ref","proposalCount","i","proposals","proposal","methods","getProposalsCount","call","sent","getProposal","result","abrupt","push","objectSpread","id","apply","arguments","fetchProposalState","_ref2","_callee2","textToSearch","proposalIdStr","_ref3","_ref4","voteEvents","removeVoteEvents","applyEventsFromProposalId","_context2","all","getPastEvents","filter","proposalId","fromBlock","slicedToArray","t0","error","alert","_x","formatStrWithYesNo","isYes","str","react_default","createElement","className","results","0","1","2","addressToEtherscanLink","href","concat","target","rel","txHashToEtherscanLink","txHash","App","state","isSearching","activeProposals","fetchAndPopulate","_this","setState","componentDidMount","_makeContractInfoFetc","handleProposalIdTextChange","event","value","trim","handleSearch","preventDefault","handleGetAllProposals","_callee3","_context3","resultIdx","username","_this$state","onSubmit","type","role","length","map","key","feeRecipient","data","includes","replace","amountInHex","parseInt","decodeData","moment","startTime","format","onChange","placeholder","toString","utils","toChecksumAddress","returnValues","fromWei","yesCount","noCount","index","values","transactionHash","voter","approve","weight","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e3ca0f0.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      const provider = new Web3.providers.HttpProvider(\n        \"https://mainnet.infura.io/\"\n      );\n      const web3 = new Web3(provider);\n      console.log(\"Using infura's Ethereum API.\");\n      resolve(web3);\n    });\n  });\n\nexport default getWeb3;\n","import HumanityGovernanceJSON from \"./contracts/HumanityGovernance.json\";\nimport TwitterHumanityApplicantJSON from \"./contracts/TwitterHumanityApplicant.json\";\n\nconst makeContractInfoFetcher = web3 => {\n  const mainnetNetworkId = 1;\n\n  const humanityGovernanceContract = new web3.eth.Contract(\n    HumanityGovernanceJSON.abi,\n    HumanityGovernanceJSON.networks[mainnetNetworkId].address\n  );\n\n  const twitterHumanityApplicantContract = new web3.eth.Contract(\n    TwitterHumanityApplicantJSON.abi,\n    TwitterHumanityApplicantJSON.networks[mainnetNetworkId].address\n  );\n\n  const fetchAllProposals = async () => {\n    const proposalCount = await humanityGovernanceContract.methods\n      .getProposalsCount()\n      .call();\n    var i;\n\n    const proposals = [];\n\n    for (i = proposalCount - 1; i > 0; i--) {\n      const proposal = await humanityGovernanceContract.methods\n        .getProposal(i)\n        .call();\n      if (proposal.result !== 0) break;\n      //console.log(i);\n      proposals.push({ ...proposal, id: i });\n    }\n\n    return proposals;\n  };\n\n  const fetchProposalState = async textToSearch => {\n    try {\n      let proposalIdStr = textToSearch;\n\n      const [\n        proposal,\n        voteEvents,\n        removeVoteEvents,\n        applyEventsFromProposalId\n      ] = await Promise.all([\n        humanityGovernanceContract.methods.getProposal(proposalIdStr).call(),\n        humanityGovernanceContract.getPastEvents(\"Vote\", {\n          filter: {\n            proposalId: proposalIdStr\n          },\n          fromBlock: 7723872\n        }),\n        humanityGovernanceContract.getPastEvents(\"RemoveVote\", {\n          filter: {\n            proposalId: proposalIdStr\n          },\n          fromBlock: 7723872\n        }),\n        twitterHumanityApplicantContract.getPastEvents(\"Apply\", {\n          filter: {\n            proposalId: proposalIdStr\n          },\n          fromBlock: 7723946\n        })\n      ]);\n\n      proposal.proposalIdStr = proposalIdStr;\n\n      return {\n        proposal,\n        voteEvents,\n        removeVoteEvents,\n        applyEventsFromProposalId\n      };\n    } catch (error) {\n      console.error(error);\n      alert(\"Wrong Proposal ID or Address.\");\n    }\n  };\n  return { fetchProposalState, fetchAllProposals };\n};\n\nexport default makeContractInfoFetcher;\n","import React, { Component } from \"react\";\nimport * as moment from \"moment\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport makeContractInfoFetcher from \"./ContractInfoFetcher\";\nimport \"./App.css\";\n\nconst boolToYesNo = isYes => {\n  if (isYes) {\n    return <span className=\"text-success\">Yes</span>;\n  } else {\n    return <span className=\"text-danger\">No</span>;\n  }\n};\n\nconst formatStrWithYesNo = (isYes, str) => {\n  if (isYes) {\n    return <span className=\"text-success\">{str}</span>;\n  } else {\n    return <span className=\"text-danger\">{str}</span>;\n  }\n};\n\nconst results = {\n  0: <span className=\"text-info\">Pending</span>,\n  1: <span className=\"text-success\">Yes</span>,\n  2: <span className=\"text-danger\">No</span>\n};\nconst resultIdxToString = resultIdx => {\n  return results[resultIdx];\n};\n\nconst addressToEtherscanLink = address => {\n  return (\n    <a\n      href={`https://etherscan.io/address/${address}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {address}\n    </a>\n  );\n};\n\nconst decodeData = data => {\n  if (data.includes(\"0a3b0a4f\"))\n    return \"Add \" + data.replace(\"0x0a3b0a4f000000000000000000000000\", \"0x\");\n  if (data.includes(\"10bf5068\")) {\n    const amountInHex = data.replace(\n      \"0x10bf5068000000000000000000000000000000000000000000000\",\n      \"0x\"\n    );\n    const amountInHum = parseInt(amountInHex) / 1e18;\n    return \"Set proposal fee to \" + amountInHum;\n  }\n\n  return \"unkown: \" + data;\n};\n\nconst matchAddressToName = address => {\n  if (address === \"0x4EE46dc4962C2c2F6bcd4C098a0E2b28f66A5E90\")\n    return \"Registry\";\n  if (address === \"0xDd806c4fDAd2949a97Fda79036cfbb8750181b37\")\n    return \"Governance\";\n  return \"unknown: \" + address;\n};\n\nconst txHashToEtherscanLink = txHash => {\n  return (\n    <a\n      href={`https://etherscan.io/tx/${txHash}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {txHash}\n    </a>\n  );\n};\n\nconst twitterUsernameToLink = username => {\n  return (\n    <a\n      href={`https://twitter.com/${username}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      @{username}\n    </a>\n  );\n};\n\nclass App extends Component {\n  state = {\n    web3: null,\n    textToSearch: \"\",\n    proposal: null,\n    voteEvents: [],\n    removeVoteEvents: [],\n    applyEventsFromProposalId: [],\n    isSearching: false,\n    activeProposals: []\n  };\n\n  fetchAndPopulate = async proposalId => {\n    const result = await this.state.fetchProposalState(proposalId);\n\n    this.setState({ isSearching: false });\n\n    this.setState({\n      proposal: result.proposal,\n      voteEvents: result.voteEvents,\n      removeVoteEvents: result.removeVoteEvents,\n      applyEventsFromProposalId: result.applyEventsFromProposalId\n    });\n  };\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n\n      await this.setState({ web3 });\n\n      const { fetchProposalState, fetchAllProposals } = makeContractInfoFetcher(\n        web3\n      );\n      this.setState({\n        fetchProposalState,\n        fetchAllProposals\n      });\n    } catch (error) {\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n\n  handleProposalIdTextChange = event => {\n    this.setState({ textToSearch: event.target.value.trim() });\n  };\n\n  handleSearch = event => {\n    event.preventDefault();\n    this.fetchAndPopulate(this.state.textToSearch);\n  };\n\n  handleGetAllProposals = async event => {\n    event.preventDefault();\n\n    this.setState({ isSearching: true });\n    const activeProposals = await this.state.fetchAllProposals();\n    this.setState({ isSearching: false, activeProposals });\n  };\n\n  render() {\n    const {\n      web3,\n      proposal,\n      voteEvents,\n      removeVoteEvents,\n      applyEventsFromProposalId,\n      isSearching,\n      activeProposals\n    } = this.state;\n\n    console.log(proposal);\n\n    if (!web3) {\n      return (\n        <div className=\"text-center pt-5\">\n          <div className=\"spinner-grow\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <nav className=\"navbar justify-content-start navbar-light bg-light\">\n          <span className=\"navbar-brand mb-0 h1\">HumanityDAO Checker</span>\n          <a\n            className=\"nav-link\"\n            href=\"https://www.humanitydao.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Humanity\n          </a>\n          <a\n            className=\"nav-link\"\n            href=\"https://discord.gg/yvUqPUn\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Discord\n          </a>\n        </nav>\n\n        <div className=\"container pt-3 pb-3\">\n          <form\n            onSubmit={this.handleGetAllProposals}\n            className=\"form-inline justify-content-center mb-5\"\n          >\n            <input\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              value=\"Get all active proposals\"\n            />\n          </form>\n\n          {isSearching && (\n            <div className=\"text-center\">\n              <div className=\"spinner-grow\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          )}\n\n          {activeProposals.length > 0 && (\n            <div className=\"mb-5\">\n              <div className=\"section-title\">Proposals</div>\n              <table className=\"table table-bordered\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th>Proposal ID</th>\n                    <th>Proposer</th>\n                    <th>Proposed action</th>\n                    <th>Target</th>\n                    <th>Start time</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {activeProposals.map(proposal => {\n                    console.log(proposal);\n                    return (\n                      <tr key={\"proposal-\" + proposal.id}>\n                        <td>{proposal.id}</td>\n                        <td>{addressToEtherscanLink(proposal.feeRecipient)}</td>\n                        <td>{decodeData(proposal.data)}</td>\n                        <td>{matchAddressToName(proposal.target)}</td>\n                        <td>\n                          {moment\n                            .unix(parseInt(proposal.startTime))\n                            .format(\"MMM DD YYYY HH:mm:ss Z\")}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          <form\n            onSubmit={this.handleSearch}\n            className=\"form-inline justify-content-center mb-5\"\n          >\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.textToSearch}\n              onChange={this.handleProposalIdTextChange}\n              placeholder=\"Proposal ID\"\n            />\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Search\" />\n          </form>\n\n          {proposal && (\n            <div className=\"mb-5\">\n              <div className=\"section-title\">Proposal</div>\n              <table className=\"table table-bordered\">\n                <tbody>\n                  <tr>\n                    <td className=\"bg-gray\">Proposal ID</td>\n                    <td>{proposal.proposalIdStr.toString()}</td>\n                  </tr>\n                  <tr>\n                    <td className=\"bg-gray\">Proposer</td>\n                    <td className=\"td-address\">\n                      {addressToEtherscanLink(proposal.feeRecipient)}\n                    </td>\n                  </tr>\n                  {proposal.data.includes(\"0a3b0a4f\") ? (\n                    <tr>\n                      <td className=\"bg-gray\">Address</td>\n                      <td className=\"td-address\">\n                        {addressToEtherscanLink(\n                          web3.utils.toChecksumAddress(\n                            proposal.data.replace(\n                              \"0x0a3b0a4f000000000000000000000000\",\n                              \"0x\"\n                            )\n                          )\n                        )}\n                      </td>\n                    </tr>\n                  ) : (\n                    <tr>\n                      <td className=\"bg-gray\">Proposal type</td>\n                      <td>Set Proposal fee</td>\n                    </tr>\n                  )}\n                  {proposal.data.includes(\"0a3b0a4f\") ? (\n                    <tr>\n                      <td className=\"bg-gray\">Twitter</td>\n                      <td>\n                        {twitterUsernameToLink(\n                          applyEventsFromProposalId[0].returnValues.username\n                        )}\n                      </td>\n                    </tr>\n                  ) : (\n                    <tr>\n                      <td className=\"bg-gray\">Proposed fee</td>\n                      <td>\n                        {parseInt(\n                          proposal.data.replace(\n                            \"0x10bf5068000000000000000000000000000000000000000000000\",\n                            \"0x\"\n                          )\n                        ) / 1e18}\n                      </td>\n                    </tr>\n                  )}\n                  <tr>\n                    <td className=\"bg-gray\">Starting Time</td>\n                    <td>\n                      {moment\n                        .unix(parseInt(proposal.startTime))\n                        .format(\"MMM DD YYYY HH:mm:ss Z\")}\n                    </td>\n                    {/* <td>{ (new Date(parseInt(proposal.startTime) * 1000)).toISOString() }</td> */}\n                  </tr>\n                  <tr>\n                    <td className=\"bg-gray\">Votes (Yes / No)</td>\n                    <td>\n                      {formatStrWithYesNo(\n                        true,\n                        web3.utils.fromWei(proposal.yesCount.toString())\n                      )}{\" \"}\n                      /{\" \"}\n                      {formatStrWithYesNo(\n                        false,\n                        web3.utils.fromWei(proposal.noCount.toString())\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"bg-gray\">Result</td>\n                    <td>{resultIdxToString(proposal.result)}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          {voteEvents.length > 0 && (\n            <div className=\"mb-5\">\n              <div className=\"section-title\">Vote Events</div>\n              <table className=\"table table-bordered\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th>TX</th>\n                    <th>Voter</th>\n                    <th>Voted for</th>\n                    <th>Weight</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {voteEvents.map((event, index) => {\n                    const values = event.returnValues;\n                    return (\n                      <tr key={\"vote-event-\" + index}>\n                        <td className=\"td-tx\">\n                          {txHashToEtherscanLink(event.transactionHash)}\n                        </td>\n                        {/* <td>{ moment.unix(parseInt(event.startTime)).format('MMM DD YYYY HH:mm:ss Z') }</td> */}\n                        <td className=\"td-address\">\n                          {addressToEtherscanLink(values.voter)}\n                        </td>\n                        <td>{boolToYesNo(values.approve)}</td>\n                        <td>\n                          {formatStrWithYesNo(\n                            values.approve,\n                            web3.utils.fromWei(values.weight.toString())\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          {removeVoteEvents.length > 0 && (\n            <div className=\"mb-5\">\n              <div className=\"section-title\">RemoveVote Events</div>\n              <table className=\"table table-bordered\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th>TX</th>\n                    <th>Voter</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {removeVoteEvents.map((event, index) => {\n                    const values = event.returnValues;\n                    return (\n                      <tr key={\"vote-event-\" + index}>\n                        <td className=\"td-tx\">\n                          {txHashToEtherscanLink(event.transactionHash)}\n                        </td>\n                        <td className=\"td-address\">\n                          {addressToEtherscanLink(values.voter)}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n\n        <footer className=\"footer bg-light text-center\">\n          <div className=\"container\">\n            <div className=\"text-muted\">\n              <a\n                href=\"https://github.com/Roger-Wu/humanitydao-applicant-status-checker\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Source Code on GitHub\n              </a>\n            </div>\n            <div className=\"text-muted\">\n              Donate ETH or tokens:{\" \"}\n              {addressToEtherscanLink(\n                \"0x36fAa1e49fF125ac72ceae0d5a2E35bC9aDD6591\"\n              )}\n            </div>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}